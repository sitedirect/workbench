<?php namespace {{vendor}}\{{name}};

use Illuminate\Support\ServiceProvider;

/**
 * {{name}}ServiceProvider
 *
 * @package {{vendor}}\{{name}}
 * @author {{author}} <{{email}}>
 */
class {{singular}}ServiceProvider extends ServiceProvider {

	/**
	 * Indicates if loading of the provider is deferred.
	 *
	 * @var bool
	 */
	protected $defer = false;

	/**
	 * Bootstrap the application events.
	 *
	 * @return void
	 */
	public function boot()
	{
		$packageRoutesPath       = __DIR__ . '/../../routes/demo.php';
		$packageConfigPath       = __DIR__ . '/../../config/config.php';
		$packageMigrationsPath   = __DIR__ . '/../../database/migrations';
		$packageAssetsPath       = __DIR__ . '/../../resources/assets';
		$packageTranslationsPath = __DIR__ . '/../../resources/lang';

		/**
		 * Loading package's routes and controllers
		 */
		include $packageRoutesPath;

		/**
		 * Loading and publishing package's config
		 */
		$config = config_path('{{lower_name}}.php');

		if (file_exists($config)) {
			$this->mergeConfigFrom($packageConfigPath, '{{lower_name}}');
		}

		$this->publishes([
			$packageConfigPath => $config,
		], 'config');

		/**
		 * Loading and publishing package's translations
		 */
		$this->loadTranslationsFrom($packageTranslationsPath, '{{lower_name}}');

		$this->publishes([
			$packageTranslationsPath => resource_path('lang/vendor/{{vendor}}{{lower_name}}'),
		], 'lang');

		/**
		 * Publishing package's assets (JavaScript, CSS, images...)
		 */
		$this->publishes([
		    $packageAssetsPath => public_path('vendor/{{lower_name}}'),
		], 'public');

		/**
		 * Loading and publishing package's migrations
		 */
		$this->loadMigrationsFrom($packageMigrationsPath);

		$this->publishes([
		    $packageMigrationsPath => database_path('/migrations')
		], 'migrations');
	}

	/**
	 * Register the service provider.
	 *
	 * @return void
	 */
	public function register()
	{
		$this->app->singleton('{{lower_name}}', function($app)
		{
			return new {{name}};
		});
	}

	/**
	 * Get the services provided by the provider.
	 *
	 * @return array
	 */
	public function provides()
	{
		return ['{{lower_name}}'];
	}

}
